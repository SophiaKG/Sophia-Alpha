<?php

use Drupal\node\NodeInterface;
use Drupal\views\Views;
use Drupal\views\ViewExecutable;

/**
 * Implements hook_views_post_execute().
 */
function fkg_ct_outcome_views_post_execute(ViewExecutable $view) {
  // Restrict the result modification to the specified view & display.
  if ($view->id() != 'fkg_outcome_programs' || $view->current_display != 'contributing_to_outcomes') {
    return;
  }

  /**
   * Remove duplicated view output items and the referenced item.
   * 
   * @see config/optional/view.view.fkg_outcome_programs.yml.
   * 
   * @todo Seek a better solution (such as using hook_views_query_alter()).
   */
  $view_result = $view->result;
  $exclude_nid = $view->args[0] ?? null;
  $unique_nids = [];
  $view->result = [];
  foreach ($view_result as $item) {
    $nid = $item->_entity->get('field_fkg_contrib_outcome')->getString();
    if ($nid && $nid != $exclude_nid && !in_array($nid, $unique_nids)) {
      $unique_nids[] = $nid;
      $view->result[] = $item;
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for template node__fkg_ct_outcome.
 */
function fkg_ct_outcome_preprocess_node__fkg_ct_outcome(&$variables) {
  $content_character_sheet = [
    '#type' => 'container',
    '#weight' => 10,
    '#attributes' => [
      'class' => [
        'field',
        'fkg-character-sheet',
        'fkg-character-sheet-outcome',
      ],
    ],
    '#attached' => [
      'library' => ['fkg_display_charsheet/fkg_character_sheet'],
    ],
  ];

  // Add the data of contributing to outcomes.
  $contributing_to_outcomes = _fkg_ct_outcome_get_contributing_to_outcomes($variables['node']);
  if (!empty($contributing_to_outcomes)) {
    $content_character_sheet['contributing_to_outcomes'] = [
      '#type' => 'container',
      '#weight' => 1,
      'label' => [
        '#type' => 'markup',
        '#markup' => '<div class="field__label">' . t('Contributing to other outcomes') . '</div>',
      ],
      'outcomes' => $contributing_to_outcomes + ['#weight' => 2],
    ];
  }

  $variables['content']['fkg-character-sheet'] = $content_character_sheet;
}

/**
 * Retrieve all the Outcomes that the programs associated with a given Outcome contribute to.
 * 
 * @param NodeInterface $node
 *   The node of a given Outcome content.
 * 
 * @return array || []
 *   A renderable array with #type 'view' holding data of contributing to outcomes.
 */
function _fkg_ct_outcome_get_contributing_to_outcomes(NodeInterface $node) {
  $outcome_owner_id = $node->get('field_bodies')->getString();
  $view_results = views_get_view_result('fkg_outcome_programs', 'owned_programs', $node->id(), $outcome_owner_id);

  $view_arg_programs_owned = implode('+',array_map(function ($result) {return $result->_entity->get('field_fkg_contrib_program')->getString() ?? NULL;}, $view_results));

  // Retrieve the outcomes that a given outcome's programs contribute to.
  // @see config/optional/views.view.fkg_outcome_programs.yml.
  $view = Views::getView('fkg_outcome_programs');
  $view->setDisplay('contributing_to_outcomes');
  $view->setArguments([$view_arg_programs_owned, $outcome_owner_id]);
  $view->preExecute();
  $view->execute();

  return $view->buildRenderable() ?? [];
}
