{#
/**
 * @file
 * Bootstrap Barrio's theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 */
#}
{# [neptune_sync/templates/node__bodies__character_sheet.html.twig #}
{{ attach_library('neptune_sync/characterSheet') }}
{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-character-sheet',
    'clearfix',
  ]
%}
{# node--view-mode-character-sheet is added to class to remove the normal or public distinction in CSS# }

{# node relative links #}
{% if logged_in == true %}
    {% if node.getType() == "bodies" or node.getType() == "legislation" or
        node.getType() == "portfolios" %}

        <div class="graph__link">
            <a href="{{ node.id() }}/graph">
                View local graph
            </a>
        </div>
        <div class="coop_graph__link">
            <a href="{{ node.id() }}/coop-graph">
                View Cooperative Relationships graph
            </a>
        </div>
        <div class="sync__link">
            <a href="{{ node.id() }}/character-sheet">
                Sync node to ontology
            </a>
        </div>

    {% endif %}
{% endif %}


{# character sheet style hooks#}
{% if node.getType() == "bodies" %}

    {# background color change#}
    {% if content.field_type_of_body[0]['#title'] == 'Non-corporate Commonwealth entity' %}
        {% set flipTheme = 'nonCorp' %}
    {% elseif content.field_type_of_body[0]['#title'] == 'Corporate Commonwealth entity' %}
        {% set flipTheme = 'corp' %}
    {% elseif content.field_type_of_body[0]['#title'] == 'Commonwealth company' %}
        {% set flipTheme = 'comCompany' %}
    {% endif %}

    {% set flipkey = '' %}

    {# financial class #}
    {% for finclass in content.field_financial_classification %}
        {% if finclass['#title'] == 'Government Business Enterprise' %}
            {% set flipkey = flipkey ~ '<span id="GBE">B</span>' %}
        {% elseif finclass['#title'] == 'Material - ( M )' %}
            {% set flipkey = flipkey ~ '<span id="material">M</span>' %}
        {% endif %}
    {% endfor %}

    {# Employment Arrangements #}
    {% for employType in content.field_employment_arrangements %}
        {% if employType['#title'] == 'Public Service Act 1999'%}
            {% set flipkey = flipkey ~ '<span id="employ_aps">PS Act</span>' %}
        {% elseif employType['#title'] == 'Does not employ under Public Service Act 1999'%}
            {% set flipkey = flipkey ~ '<span id="employ_naps">^</span>' %}
        {% elseif employType['#title'] == 'Both'%}
            {% set flipkey = flipkey ~ '<span id="employ_both">#</span>' %}
        {% elseif employType['#title'] == 'Parliamentary Service Act 1999'%}
            {% set flipkey = flipkey ~ '<span id="employ_par">▲</span>' %}
        {%  endif %}
    {% endfor %}

    {# Economic sector #}
    {% for ecoSector in content.field_economic_sector %}
        {% if ecoSector['#title'] == 'Public Financial Corporation' %}
            {% set flipkey = flipkey ~ '<span id="fin">F</span>' %}
        {% elseif ecoSector['#title'] == 'Public Non-financial Corporation' %}
            {% set flipkey = flipkey ~ '<span id="nfin">T</span>' %}
        {% elseif ecoSector['#title'] == 'General Government Sector - (GGS)' %}
            {% set flipkey = flipkey ~ '<span id="GGS">GGS</span>' %}
        {% endif %}
    {% endfor %}

    {# flipchart keys #}
    {% for key in content.field_flipchart_keys %}
        {% if key['#title']  == 'E' %}
            {% set flipkey = flipkey ~ '<span id="eagency">E</span>' %}
        {% elseif key['#title']  == 'I' %}
            {% set flipkey = flipkey ~ '<span id="inter">I</span>' %}
        {% elseif key['#title']  == 'R' %}
            {% set flipkey = flipkey ~ '<span id="cce">R</span>' %}
        {% elseif key['#title']  == '*' %}
            {% set flipkey = flipkey ~ '<span id="three">*</span>' %}
        {% elseif key['#title']  == '℗' %}
            {% set flipkey = flipkey ~ '<span id="cpr">℗</span>' %}
        {% elseif key['#title']  == 'X' %}
            {% set flipkey = flipkey ~ '<span id="exempt">X</span>' %}
        {# elseif key['#title']  == 'Listed Entities' #}
            {# set flipkey = flipkey ~ '<span id="le">Listed Entities </span>' #}
        {% endif %}
    {% endfor %}
{% endif %}

 {# content.field_accountable_authority_or_g.0 #}

<article{{ attributes.addClass(classes, flipTheme) }}>
  {# <header>#}
        {{ title_prefix }}
    {% if not page %}
      <div{{ title_attributes.addClass('node__title') }}>
        <a href="{{ url }}" rel="bookmark">{{ label }}</a>
        <span class="character-sheet-keys">
            {{ flipkey|raw }}
        </span>
      </div>
    {% endif %}
    {{ title_suffix }}
    {% if display_submitted %}
      <div class="node__meta">
        {{ author_picture }}
        {% block submitted %}
          <em{{ author_attributes }}>
            {% trans %}Submitted by {{ author_name }} on {{ date }}{% endtrans %}
          </em>
        {% endblock %}
        {{ metadata }}
      </div>
    {% endif %}
  {# </header>#}
  {% if _context.view == null and node.getType() == 'bodies' %}
    <div{{ content_attributes.addClass('node__content', 'clearfix') }}>
        {{ content.field_alias }}
        {{ content.field_ink }}
        {{ content.field_portfolio }}
        <h3><a data-toggle="collapse" href="#character-sheet-govern" aria-expanded="false"><spam class="fas fkg-charactersheet-collapse-control">Governance Characteristics</spam></a></h3>
        <div id="character-sheet-govern" class="collapse">
            {% for field in content|without('field_ink', 'field_alias', 'field_portfolio', 'field_cp_tabled', 'field_s35_3_pgpa_act_apply', 'field_reporting_variation') %}
                {{ field }}
            {% endfor %}
        </div>
        {% if logged_in == true %}
            <h3><a data-toggle="collapse" href="#character-sheet-budget" aria-expanded="false"><spam class="fas fkg-charactersheet-collapse-control">Current Budget Characteristics</spam></a></h3>
            <div id="character-sheet-budget" class="collapse">{{ drupal_token("fkg_ct_program:body_programs:#{node.id}") |raw }}</div>
        {% endif %}
    </div>
  {% endif %}
</article>
